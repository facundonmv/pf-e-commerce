{"ast":null,"code":"import axios from 'axios';\nexport function getDogs() {\n  return async function (dispatch) {\n    var {\n      data\n    } = await axios.get(\"http://localhost:3001/dogs\"); //aca sucede toda la conexion entre el front y el back\n\n    return dispatch({\n      type: 'GET_DOGS',\n      payload: data\n    });\n  };\n}\nexport function getTemperaments() {\n  return async function (dispatch) {\n    var {\n      data\n    } = await axios.get(\"http://localhost:3001/temperament\");\n    return dispatch({\n      type: 'GET_TEMPERAMENTS',\n      payload: data\n    });\n  };\n}\nexport function getId(id) {\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios.get('http://localhost:3001/dogs' + '/' + id);\n    return dispatch({\n      type: 'GET_ID',\n      payload: data\n    });\n  };\n}\nexport function getSearch(payload) {\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios.get(`http://localhost:3001/dogs?name=${payload}`);\n    return dispatch({\n      type: 'GET_SEARCH',\n      payload: data\n    });\n  };\n}\nexport function getPost(payload) {\n  //esto me va a devolver la información de los dogs que se agregan por post\n  return async function (dispatch) {\n    var json = await axios.post(\"http://localhost:3001/dog\", payload); // uso axios.post para disparar la accion de crear un god\n\n    /* console.log(json)*/\n    //en esta ruta quiero hacer el post del payload (lo que llega en el front)\n\n    return dispatch({\n      type: \"POST_DOG\",\n      payload: json.data\n    });\n  };\n}\n;\nexport const orderAlpha = payload => {\n  return {\n    type: 'ORDER_ALPHA',\n    payload\n  };\n};\nexport const filterTemp = payload => {\n  return {\n    type: 'FILTER_TEMP',\n    payload\n  };\n};\nexport const filterWeight = payload => {\n  return {\n    type: 'FILTER_WEIGHT',\n    payload\n  };\n};\nexport const filterCreated = payload => {\n  return {\n    type: 'FILTER_CREATED',\n    payload\n  };\n};","map":{"version":3,"names":["axios","getDogs","dispatch","data","get","type","payload","getTemperaments","getId","id","getSearch","getPost","json","post","orderAlpha","filterTemp","filterWeight","filterCreated"],"sources":["C:/Users/Facundo y Agustina/Videos/PI-Dogs-main/client/src/action/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport function getDogs(){\r\n    return async function(dispatch){\r\n        var {data} = await axios.get(\"http://localhost:3001/dogs\")//aca sucede toda la conexion entre el front y el back\r\n        return dispatch({\r\n            type: 'GET_DOGS',\r\n            payload: data\r\n        })\r\n    }\r\n}\r\n\r\nexport function getTemperaments(){\r\n    return async function (dispatch){\r\n        var {data} = await axios.get(\"http://localhost:3001/temperament\")\r\n   return dispatch({\r\n    type: 'GET_TEMPERAMENTS',\r\n    payload: data\r\n   })\r\n    }\r\n}\r\n\r\nexport function getId(id){\r\n    return async function(dispatch){\r\n        const {data} = await axios.get('http://localhost:3001/dogs' + '/' + id)\r\n        return dispatch({\r\n            type: 'GET_ID',\r\n            payload: data\r\n        })\r\n    }\r\n}\r\n\r\nexport function getSearch(payload){\r\n    return async function (dispatch){\r\n        const {data} = await axios.get(`http://localhost:3001/dogs?name=${payload}`)\r\n        return dispatch({\r\n            type: 'GET_SEARCH',\r\n            payload: data\r\n        })\r\n    }\r\n}\r\n\r\nexport function getPost (payload) {   //esto me va a devolver la información de los dogs que se agregan por post\r\n    return async function (dispatch) {\r\n        var json = await axios.post(\"http://localhost:3001/dog\", payload);  // uso axios.post para disparar la accion de crear un god\r\n        /* console.log(json)*/                                                    //en esta ruta quiero hacer el post del payload (lo que llega en el front)\r\n        return dispatch ({\r\n            type: \"POST_DOG\",\r\n            payload: json.data\r\n        })\r\n    }\r\n  };\r\n\r\nexport const orderAlpha = (payload) =>{\r\n    return{\r\n        type: 'ORDER_ALPHA',\r\n        payload\r\n    }\r\n}\r\n\r\nexport const filterTemp = (payload) =>{\r\n    return{\r\n        type: 'FILTER_TEMP',\r\n        payload\r\n    }\r\n}\r\n\r\nexport const filterWeight = (payload) => {\r\n    return {\r\n        type: 'FILTER_WEIGHT',\r\n        payload\r\n    }\r\n}\r\n\r\nexport const filterCreated = (payload) => {\r\n    return {\r\n        type: 'FILTER_CREATED',\r\n        payload\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,GAAkB;EACrB,OAAO,gBAAeC,QAAf,EAAwB;IAC3B,IAAI;MAACC;IAAD,IAAS,MAAMH,KAAK,CAACI,GAAN,CAAU,4BAAV,CAAnB,CAD2B,CAC+B;;IAC1D,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAE,UADM;MAEZC,OAAO,EAAEH;IAFG,CAAD,CAAf;EAIH,CAND;AAOH;AAED,OAAO,SAASI,eAAT,GAA0B;EAC7B,OAAO,gBAAgBL,QAAhB,EAAyB;IAC5B,IAAI;MAACC;IAAD,IAAS,MAAMH,KAAK,CAACI,GAAN,CAAU,mCAAV,CAAnB;IACL,OAAOF,QAAQ,CAAC;MACfG,IAAI,EAAE,kBADS;MAEfC,OAAO,EAAEH;IAFM,CAAD,CAAf;EAIE,CAND;AAOH;AAED,OAAO,SAASK,KAAT,CAAeC,EAAf,EAAkB;EACrB,OAAO,gBAAeP,QAAf,EAAwB;IAC3B,MAAM;MAACC;IAAD,IAAS,MAAMH,KAAK,CAACI,GAAN,CAAU,+BAA+B,GAA/B,GAAqCK,EAA/C,CAArB;IACA,OAAOP,QAAQ,CAAC;MACZG,IAAI,EAAE,QADM;MAEZC,OAAO,EAAEH;IAFG,CAAD,CAAf;EAIH,CAND;AAOH;AAED,OAAO,SAASO,SAAT,CAAmBJ,OAAnB,EAA2B;EAC9B,OAAO,gBAAgBJ,QAAhB,EAAyB;IAC5B,MAAM;MAACC;IAAD,IAAS,MAAMH,KAAK,CAACI,GAAN,CAAW,mCAAkCE,OAAQ,EAArD,CAArB;IACA,OAAOJ,QAAQ,CAAC;MACZG,IAAI,EAAE,YADM;MAEZC,OAAO,EAAEH;IAFG,CAAD,CAAf;EAIH,CAND;AAOH;AAED,OAAO,SAASQ,OAAT,CAAkBL,OAAlB,EAA2B;EAAI;EAClC,OAAO,gBAAgBJ,QAAhB,EAA0B;IAC7B,IAAIU,IAAI,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,2BAAX,EAAwCP,OAAxC,CAAjB,CAD6B,CACuC;;IACpE;IAA0E;;IAC1E,OAAOJ,QAAQ,CAAE;MACbG,IAAI,EAAE,UADO;MAEbC,OAAO,EAAEM,IAAI,CAACT;IAFD,CAAF,CAAf;EAIH,CAPD;AAQD;AAAA;AAEH,OAAO,MAAMW,UAAU,GAAIR,OAAD,IAAY;EAClC,OAAM;IACFD,IAAI,EAAE,aADJ;IAEFC;EAFE,CAAN;AAIH,CALM;AAOP,OAAO,MAAMS,UAAU,GAAIT,OAAD,IAAY;EAClC,OAAM;IACFD,IAAI,EAAE,aADJ;IAEFC;EAFE,CAAN;AAIH,CALM;AAOP,OAAO,MAAMU,YAAY,GAAIV,OAAD,IAAa;EACrC,OAAO;IACHD,IAAI,EAAE,eADH;IAEHC;EAFG,CAAP;AAIH,CALM;AAOP,OAAO,MAAMW,aAAa,GAAIX,OAAD,IAAa;EACtC,OAAO;IACHD,IAAI,EAAE,gBADH;IAEHC;EAFG,CAAP;AAIH,CALM"},"metadata":{},"sourceType":"module"}